#!/bin/bash
set -euo pipefail

# Generate deployment summary using template
echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
echo "" >> $GITHUB_STEP_SUMMARY
echo "**Target Environment**: $TARGET_ENVIRONMENT" >> $GITHUB_STEP_SUMMARY
echo "**Safety Status**: $SAFETY_STATUS" >> $GITHUB_STEP_SUMMARY
echo "**Event Type**: $EVENT_TYPE" >> $GITHUB_STEP_SUMMARY
echo "**Branch**: $BRANCH_NAME" >> $GITHUB_STEP_SUMMARY

if [ "$EVENT_TYPE" == "push" ]; then
  echo "**Merged PR**: #${PR_NUMBER:-N/A}" >> $GITHUB_STEP_SUMMARY
else
  echo "**Pull Request**: #${PR_NUMBER:-N/A}" >> $GITHUB_STEP_SUMMARY
fi

echo "" >> $GITHUB_STEP_SUMMARY

# Show all deployment targets with status (Dynamic)
echo "### 📋 Deployment Targets" >> $GITHUB_STEP_SUMMARY

# Count targets by stack dynamically
TOTAL_COUNT=$(echo "$TARGETS" | jq 'length')
echo "**Total Targets**: $TOTAL_COUNT" >> $GITHUB_STEP_SUMMARY

if [ $TOTAL_COUNT -gt 0 ]; then
  echo "" >> $GITHUB_STEP_SUMMARY
  echo "| Service | Environment | Stack | Status |" >> $GITHUB_STEP_SUMMARY
  echo "|---------|-------------|-------|--------|" >> $GITHUB_STEP_SUMMARY

  # Generate table rows from targets
  echo "$TARGETS" | jq -r '.[] | "| \(.service) | \(.environment) | \(.stack) | ⏳ Pending |"' >> $GITHUB_STEP_SUMMARY
else
  echo "" >> $GITHUB_STEP_SUMMARY
  echo "No deployment targets found." >> $GITHUB_STEP_SUMMARY
fi

echo "" >> $GITHUB_STEP_SUMMARY
echo "### 📊 Stack Summary" >> $GITHUB_STEP_SUMMARY

# Count by stack
if [ -n "$DETECTED_STACKS" ]; then
  for stack in $(echo "$DETECTED_STACKS" | tr ',' ' '); do
    COUNT=$(echo "$TARGETS" | jq --arg stack "$stack" '[.[] | select(.stack == $stack)] | length')
    echo "- **$stack**: $COUNT targets" >> $GITHUB_STEP_SUMMARY
  done
else
  echo "No stacks detected." >> $GITHUB_STEP_SUMMARY
fi

echo "" >> $GITHUB_STEP_SUMMARY
echo "---" >> $GITHUB_STEP_SUMMARY
echo "*Generated by deployment automation*" >> $GITHUB_STEP_SUMMARY
