name: 'Reusable - Kubernetes Executor'

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
        description: 'Service name for kubernetes manifest generation'
      environment:
        required: true
        type: string
        description: 'Environment name (develop, staging, production, etc.)'
      source-path:
        required: true
        type: string
        description: 'Source path for kustomize build (e.g., demo-service/kubernetes/overlays/develop)'
      target-repository:
        required: true
        type: string
        description: 'Target repository for generated manifests (e.g., panicboat/generated-manifests)'
      target-branch:
        required: true
        type: string
        description: 'Target branch for generated manifests'
    secrets:
      APP_PRIVATE_KEY:
        required: true
        description: 'GitHub App private key for authentication'

jobs:
  kubernetes-execution:
    name: 'Kubernetes Manifest Generation - ${{ inputs.service-name }}:${{ inputs.environment }}'
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2.0.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: "5.0.0"

      - name: Validate Kubernetes directory structure
        run: |
          if [ ! -d "${{ inputs.source-path }}" ]; then
            echo "::error::Kustomize directory not found: ${{ inputs.source-path }}"
            echo "Expected kustomize directory structure with overlays for each environment"
            exit 1
          fi
          
          KUSTOMIZATION_FILE="${{ inputs.source-path }}/kustomization.yaml"
          if [ ! -f "$KUSTOMIZATION_FILE" ]; then
            echo "::error::kustomization.yaml not found: $KUSTOMIZATION_FILE"
            exit 1
          fi
          
          echo "‚úÖ Kustomize structure validated for ${{ inputs.service-name }}:${{ inputs.environment }}"

      - name: Build Kubernetes manifests
        id: kustomize-build
        run: |
          OUTPUT_FILE="/tmp/${{ inputs.service-name }}-generated.yaml"
          
          echo "Building manifests from: ${{ inputs.source-path }}"
          kustomize build "${{ inputs.source-path }}" > "$OUTPUT_FILE"
          
          if [ ! -s "$OUTPUT_FILE" ]; then
            echo "::error::Generated manifest file is empty"
            exit 1
          fi
          
          echo "output-file=$OUTPUT_FILE" >> $GITHUB_OUTPUT
          echo "‚úÖ Successfully built manifests for ${{ inputs.service-name }}"
        continue-on-error: true

      - name: Parse build results
        if: always()
        id: parse-results
        run: |
          STATUS=$([ "${{ steps.kustomize-build.outcome }}" == "success" ] && echo "‚úÖ Success" || echo "‚ùå Failed")
          echo "status=$STATUS" >> $GITHUB_OUTPUT
          
          if [ "${{ steps.kustomize-build.outcome }}" == "failure" ]; then
            echo "build-failed=true" >> $GITHUB_OUTPUT
          else
            echo "build-failed=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout target repository
        if: steps.parse-results.outputs.build-failed == 'false'
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.target-repository }}
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ inputs.target-branch }}
          path: generated-manifests

      - name: Configure Git for target repository
        if: steps.parse-results.outputs.build-failed == 'false'
        working-directory: generated-manifests
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update generated manifests
        if: steps.parse-results.outputs.build-failed == 'false'
        id: update-manifests
        working-directory: generated-manifests
        run: |
          # Create service directory if not exists
          SERVICE_DIR="${{ inputs.service-name }}"
          mkdir -p "$SERVICE_DIR"
          
          # Copy generated manifest
          cp "${{ steps.kustomize-build.outputs.output-file }}" "$SERVICE_DIR/generated.yaml"
          
          # Add and commit changes
          git add "$SERVICE_DIR/generated.yaml"
          
          if git diff --cached --quiet; then
            echo "No changes detected in generated manifests"
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Update ${{ inputs.service-name }} manifests for ${{ inputs.environment }} environment

            Generated from: ${{ github.repository }}@${{ github.sha }}
            Service: ${{ inputs.service-name }}
            Environment: ${{ inputs.environment }}
            Branch: ${{ inputs.target-branch }}"
            
            echo "‚úÖ Committed manifest changes for ${{ inputs.service-name }}"
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Push to target repository
        if: steps.parse-results.outputs.build-failed == 'false' && steps.update-manifests.outputs.has-changes == 'true'
        working-directory: generated-manifests
        run: |
          git push origin ${{ inputs.target-branch }}
          echo "‚úÖ Successfully pushed manifests to ${{ inputs.target-repository }}"

      - name: Get current PR information
        id: pr-info
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          state: all
        continue-on-error: true

      - name: Create or update PR comment
        if: steps.pr-info.outputs.number
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            ## ‚ò∏Ô∏è Kubernetes Manifest Generation Results

            **Service**: ${{ inputs.service-name }}
            **Environment**: `${{ inputs.environment }}`
            **Status**: ${{ steps.parse-results.outputs.status }}
            **Target Repository**: [${{ inputs.target-repository }}](https://github.com/${{ inputs.target-repository }}/tree/${{ inputs.target-branch }})
            **Generated File**: `${{ inputs.service-name }}/generated.yaml`

            ### üìã Generation Details
            - **Source Path**: `${{ inputs.source-path }}`
            - **Commit**: [`${{ github.sha }}`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            - **Branch**: `${{ inputs.target-branch }}`
            ${{ steps.parse-results.outputs.build-failed == 'false' && steps.update-manifests.outputs.has-changes == 'false' && '- **Changes**: No manifest changes detected' || '' }}

            ${{ steps.parse-results.outputs.build-failed == 'false' && '[View generated manifests](https://github.com/${{ inputs.target-repository }}/blob/${{ inputs.target-branch }}/${{ inputs.service-name }}/generated.yaml) |' || '' }} [View workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            ---
            *Generated by Kubernetes manifest automation*
          comment-tag: 'kubernetes-manifest-${{ inputs.environment }}-${{ inputs.service-name }}'
          mode: upsert
          pr-number: ${{ steps.pr-info.outputs.number }}
        continue-on-error: true

      - name: Exit with appropriate code
        run: |
          if [ "${{ steps.kustomize-build.outcome }}" == "failure" ]; then
            echo "::error::Kubernetes manifest generation failed for ${{ inputs.service-name }}:${{ inputs.environment }}"
            exit 1
          fi