name: 'claude-code-action / configuration'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to generate configuration for'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production
      all_environments:
        description: 'Generate configuration for all environments'
        required: false
        default: false
        type: boolean

env:
  TF_VERSION: '1.5.0'
  TERRAGRUNT_VERSION: '0.58.0'
  AWS_REGION: 'us-east-1'
  WORKING_DIRECTORY: './github-actions/claude-code-action/terragrunt'

jobs:
  detect-changes:
    name: 'Determine Environments'
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.env.outputs.environments }}
    steps:
    - name: Determine target environments
      id: env
      run: |
        if [ "${{ inputs.all_environments }}" = "true" ]; then
          ENVIRONMENTS='["development","staging","production"]'
        else
          ENVIRONMENTS='["${{ inputs.environment }}"]'
        fi

        echo "Target environments: $ENVIRONMENTS"
        echo "environments=$ENVIRONMENTS" >> $GITHUB_OUTPUT

  generate-claude-config:
    name: 'Generate Claude Configuration'
    needs: detect-changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        environment: ${{ fromJson(needs.detect-changes.outputs.environments) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform-version: ${{ env.TF_VERSION }}

    - name: Setup Terragrunt
      run: |
        wget https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TERRAGRUNT_VERSION }}/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

    - name: Get Terragrunt Outputs
      id: outputs
      run: |
        echo "iam_role_arn=$(terragrunt output -raw iam_role_arn)" >> $GITHUB_OUTPUT
        echo "aws_region=$(terragrunt output -raw aws_region)" >> $GITHUB_OUTPUT
        echo "s3_bucket_name=$(terragrunt output -raw s3_bucket_name)" >> $GITHUB_OUTPUT
        echo "cloudwatch_log_group_name=$(terragrunt output -raw cloudwatch_log_group_name)" >> $GITHUB_OUTPUT
      working-directory: ${{ env.WORKING_DIRECTORY }}/envs/${{ matrix.environment }}

    - name: Create Claude Configuration Summary
      run: |
        echo "## 🚀 Claude Code Action Configuration - ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ matrix.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "- **IAM Role ARN**: \`${{ steps.outputs.outputs.iam_role_arn }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **AWS Region**: ${{ steps.outputs.outputs.aws_region }}" >> $GITHUB_STEP_SUMMARY
        echo "- **S3 Bucket**: ${{ steps.outputs.outputs.s3_bucket_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **CloudWatch Log Group**: ${{ steps.outputs.outputs.cloudwatch_log_group_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration Generated**: $(date)" >> $GITHUB_STEP_SUMMARY

    - name: Generate Claude Config JSON
      run: |
        echo "## 📝 Claude Code Action Configuration" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
        echo "{" >> $GITHUB_STEP_SUMMARY
        echo "  \"provider\": \"bedrock\"," >> $GITHUB_STEP_SUMMARY
        echo "  \"region\": \"${{ steps.outputs.outputs.aws_region }}\"," >> $GITHUB_STEP_SUMMARY
        echo "  \"model\": \"anthropic.claude-3-sonnet-20240229-v1:0\"," >> $GITHUB_STEP_SUMMARY
        echo "  \"role_arn\": \"${{ steps.outputs.outputs.iam_role_arn }}\"," >> $GITHUB_STEP_SUMMARY
        echo "  \"log_group\": \"${{ steps.outputs.outputs.cloudwatch_log_group_name }}\"" >> $GITHUB_STEP_SUMMARY
        echo "}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

    - name: Save Configuration File
      run: |
        mkdir -p ./outputs
        cat > ./outputs/claude-config-${{ matrix.environment }}.json << EOF
        {
          "provider": "bedrock",
          "region": "${{ steps.outputs.outputs.aws_region }}",
          "model": "anthropic.claude-3-sonnet-20240229-v1:0",
          "role_arn": "${{ steps.outputs.outputs.iam_role_arn }}",
          "log_group": "${{ steps.outputs.outputs.cloudwatch_log_group_name }}"
        }
        EOF

    - name: Upload Configuration Artifact
      uses: actions/upload-artifact@v4
      with:
        name: claude-config-${{ matrix.environment }}
        path: ./outputs/claude-config-${{ matrix.environment }}.json
        retention-days: 90
