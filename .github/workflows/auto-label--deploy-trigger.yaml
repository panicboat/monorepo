name: 'Auto Label - Deploy Trigger'

on:
  pull_request:
    types: [labeled]
    branches:
      - '**'
  push:
    branches:
      - develop
      - staging
      - production

permissions:
  id-token: write
  contents: read
  pull-requests: write
  issues: write
  packages: read

jobs:
  extract-deployment-targets:
    name: 'Extract Deployment Targets'
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.extract.outputs.targets }}
      has-targets: ${{ steps.extract.outputs.has-targets }}
      target-environment: ${{ steps.extract.outputs.target-environment }}
      safety-status: ${{ steps.extract.outputs.safety-status }}
      detected-stacks: ${{ steps.extract.outputs.detected-stacks }}
      terragrunt-targets: ${{ steps.extract.outputs.terragrunt-targets }}
      kubernetes-targets: ${{ steps.extract.outputs.kubernetes-targets }}
      has-terragrunt: ${{ steps.extract.outputs.has-terragrunt }}
      has-kubernetes: ${{ steps.extract.outputs.has-kubernetes }}
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2.0.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Extract deployment targets
        id: extract
        uses: ./.github/actions/extract-deployment-targets
        with:
          event-type: ${{ github.event_name }}
          pr-number: ${{ github.event.pull_request.number }}
          github-token: ${{ steps.app-token.outputs.token }}

  deploy-terragrunt:
    name: 'Deploy Terragrunt (${{ matrix.target.service }}:${{ matrix.target.environment }})'
    needs: extract-deployment-targets
    if: needs.extract-deployment-targets.outputs.has-terragrunt == 'true'
    strategy:
      matrix:
        target: ${{ fromJson(needs.extract-deployment-targets.outputs.terragrunt-targets) }}
      fail-fast: false
    uses: ./.github/workflows/reusable--terragrunt-executor.yaml
    with:
      project-name: ${{ matrix.target.service }}
      environment: ${{ matrix.target.environment }}
      action-type: ${{ github.event_name == 'pull_request' && 'plan' || 'apply' }}
      plan-iam-role: ${{ matrix.target.iam_role_plan }}
      apply-iam-role: ${{ matrix.target.iam_role_apply }}
      aws-region: ${{ matrix.target.aws_region }}
      working-directory: ${{ matrix.target.working_directory }}
    secrets:
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

  deploy-kubernetes:
    name: 'Deploy Kubernetes (${{ matrix.target.service }}:${{ matrix.target.environment }})'
    needs: extract-deployment-targets
    if: needs.extract-deployment-targets.outputs.has-kubernetes == 'true'
    strategy:
      matrix:
        target: ${{ fromJson(needs.extract-deployment-targets.outputs.kubernetes-targets) }}
      fail-fast: false
    uses: ./.github/workflows/reusable--kubernetes-executor.yaml
    with:
      service-name: ${{ matrix.target.service }}
      environment: ${{ matrix.target.environment }}
      source-path: ${{ matrix.target.working_directory }}
      action-type: ${{ github.event_name == 'pull_request' && 'diff' || 'apply' }}
    secrets:
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}

  deployment-summary:
    name: 'Deployment Summary'
    needs: [extract-deployment-targets, deploy-terragrunt, deploy-kubernetes]
    if: always() && needs.extract-deployment-targets.outputs.has-targets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2.0.6
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Generate deployment summary
        uses: ./.github/actions/generate-deployment-summary
        with:
          targets: ${{ needs.extract-deployment-targets.outputs.targets }}
          target-environment: ${{ needs.extract-deployment-targets.outputs.target-environment }}
          safety-status: ${{ needs.extract-deployment-targets.outputs.safety-status }}
          event-type: ${{ github.event_name }}
          branch-name: ${{ github.ref_name }}
          pr-number: ${{ github.event.pull_request.number }}
          detected-stacks: ${{ needs.extract-deployment-targets.outputs.detected-stacks }}
