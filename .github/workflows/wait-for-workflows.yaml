name: Wait for Workflows
on:
  pull_request:
    branches-ignore:
      - main

jobs:
  wait-for-workflows:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pull-requests: write
      actions: read
      checks: read
    steps:

    - name: Get GitHub App Token
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        permission-actions: read
        permission-checks: read
        permission-pull-requests: write

    - name: Wait for all workflows to complete
      uses: lewagon/wait-on-check-action@v1.3.4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        running-workflow-name: 'wait-for-workflows'
        repo-token: ${{ steps.app-token.outputs.token }}
        allowed-conclusions: success,failure,skipped,cancelled
        wait-interval: 10


    - name: Get all workflow statuses
      id: workflow-status
      run: |
        echo "Getting workflow status for PR #${{ github.event.pull_request.number }}"
        HEAD_SHA="${{ github.event.pull_request.head.sha }}"

        # ワークフローデータを一度だけ取得
        WORKFLOW_DATA=$(gh api repos/${{ github.repository }}/actions/runs \
          --jq --arg sha "$HEAD_SHA" \
          '.workflow_runs[] | select(.head_sha == $sha and .name != "Wait for Workflows")')

        echo "Raw workflow data:"
        echo "$WORKFLOW_DATA"

        # 一時ファイルに保存
        echo "$WORKFLOW_DATA" > raw_workflows.txt

        # カウントを計算（grepとwcを使用）
        SUCCESS_COUNT=$(echo "$WORKFLOW_DATA" | jq -r '.conclusion' | grep -c '^success$' || echo 0)
        FAILURE_COUNT=$(echo "$WORKFLOW_DATA" | jq -r '.conclusion' | grep -c '^failure$' || echo 0)
        IN_PROGRESS_COUNT=$(echo "$WORKFLOW_DATA" | jq -r '.status' | grep -c '^in_progress$' || echo 0)
        TOTAL_COUNT=$(echo "$WORKFLOW_DATA" | jq -r '.name' | wc -l)

        echo "Success: $SUCCESS_COUNT, Failure: $FAILURE_COUNT, In Progress: $IN_PROGRESS_COUNT, Total: $TOTAL_COUNT"

        # 出力に設定
        echo "success-count=$SUCCESS_COUNT" >> $GITHUB_OUTPUT
        echo "failure-count=$FAILURE_COUNT" >> $GITHUB_OUTPUT
        echo "in-progress-count=$IN_PROGRESS_COUNT" >> $GITHUB_OUTPUT
        echo "total-count=$TOTAL_COUNT" >> $GITHUB_OUTPUT

        # 全体ステータスを判定
        if [[ $IN_PROGRESS_COUNT -gt 0 ]]; then
          echo "overall-status=in_progress" >> $GITHUB_OUTPUT
        elif [[ $FAILURE_COUNT -gt 0 ]]; then
          echo "overall-status=failure" >> $GITHUB_OUTPUT
        elif [[ $SUCCESS_COUNT -eq $TOTAL_COUNT ]] && [[ $TOTAL_COUNT -gt 0 ]]; then
          echo "overall-status=success" >> $GITHUB_OUTPUT
        else
          echo "overall-status=unknown" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

    - name: Generate comment content
      run: |
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        OVERALL_STATUS="${{ steps.workflow-status.outputs.overall-status }}"
        SUCCESS_COUNT="${{ steps.workflow-status.outputs.success-count }}"
        FAILURE_COUNT="${{ steps.workflow-status.outputs.failure-count }}"
        IN_PROGRESS_COUNT="${{ steps.workflow-status.outputs.in-progress-count }}"
        TOTAL_COUNT="${{ steps.workflow-status.outputs.total-count }}"

        {
          echo "<!-- WORKFLOW_STATUS_COMMENT -->"
          echo "## 🔄 Workflow Status Report"
          echo ""
          echo "**Last updated:** $TIMESTAMP"
          echo "**Commit:** \`${{ github.event.pull_request.head.sha }}\`"
          echo ""

          case "$OVERALL_STATUS" in
            "success")
              echo "### ✅ All Workflows Passed!"
              echo ""
              echo "🎉 **Status:** All $TOTAL_COUNT workflows completed successfully"
              ;;
            "failure")
              echo "### ❌ Some Workflows Failed"
              echo ""
              echo "📊 **Summary:**"
              echo "- ✅ Success: $SUCCESS_COUNT"
              echo "- ❌ Failed: $FAILURE_COUNT"
              echo "- 📋 Total: $TOTAL_COUNT"
              ;;
            "in_progress")
              echo "### ⏳ Workflows Still Running"
              echo ""
              echo "📊 **Summary:**"
              echo "- ✅ Success: $SUCCESS_COUNT"
              echo "- ❌ Failed: $FAILURE_COUNT"
              echo "- ⏳ In Progress: $IN_PROGRESS_COUNT"
              echo "- 📋 Total: $TOTAL_COUNT"
              ;;
            *)
              echo "### ❓ No Workflows Found"
              echo ""
              echo "No workflows found for this commit."
              ;;
          esac

          echo ""
          echo "### 📋 Workflow Details"
          echo ""

          if [[ -s workflow_results.json ]]; then
            echo "| Workflow | Status | Result |"
            echo "|----------|---------|--------|"

            jq -r '. as $item |
              if .conclusion == "success" then "✅"
              elif .conclusion == "failure" then "❌"
              elif .status == "in_progress" then "⏳"
              else "⏸️" end as $icon |
              .conclusion // .status as $result |
              "| [\(.name)](\(.html_url)) | \($icon) | \($result) |"' workflow_results.json
          else
            echo "No workflow data available."
          fi

          echo ""
          echo "---"
          echo "*This comment is automatically updated when workflow status changes.*"

        } > comment_body.md

        echo "Generated comment:"
        cat comment_body.md

    - name: Get GitHub App info
      id: app-info
      run: |
        APP_SLUG=$(gh api user --jq '.login')
        echo "app-slug=$APP_SLUG" >> $GITHUB_OUTPUT
        echo "GitHub App slug: $APP_SLUG"
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

    - name: Find existing comment
      uses: peter-evans/find-comment@v3
      id: find-comment
      with:
        token: ${{ steps.app-token.outputs.token }}
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: '${{ steps.app-info.outputs.app-slug }}'
        body-includes: '<!-- WORKFLOW_STATUS_COMMENT -->'

    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ steps.app-token.outputs.token }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: comment_body.md
        edit-mode: replace

    - name: Notify Slack on failure
      if: steps.workflow-status.outputs.overall-status == 'failure'
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: 'C1234567890'
        slack-message: |
          🚨 Some workflows failed in PR #${{ github.event.pull_request.number }}

          📊 Summary:
          - ✅ Success: ${{ steps.workflow-status.outputs.success-count }}
          - ❌ Failed: ${{ steps.workflow-status.outputs.failure-count }}
          - 📋 Total: ${{ steps.workflow-status.outputs.total-count }}

          👤 Author: ${{ github.event.pull_request.user.login }}
          🔗 PR: ${{ github.event.pull_request.html_url }}
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Notify Slack on success
      if: steps.workflow-status.outputs.overall-status == 'success'
      uses: slackapi/slack-github-action@v1.27.0
      with:
        channel-id: 'C1234567890'
        slack-message: |
          🎉 All workflows passed for PR #${{ github.event.pull_request.number }}

          ✅ **Status:** All ${{ steps.workflow-status.outputs.total-count }} workflows completed successfully

          📝 **Title:** ${{ github.event.pull_request.title }}
          👤 **Author:** ${{ github.event.pull_request.user.login }}
          🏷️ **Branch:** ${{ github.event.pull_request.head.ref }}
          🔗 **PR:** ${{ github.event.pull_request.html_url }}

          Ready for review and merge! 🚀
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Fail if workflows failed
      if: steps.workflow-status.outputs.overall-status == 'failure'
      run: |
        echo "❌ Some workflows failed - failing this workflow as well"
        exit 1

    - name: Success actions
      if: steps.workflow-status.outputs.overall-status == 'success'
      run: |
        echo "✅ All workflows passed successfully!"
        echo "PR #${{ github.event.pull_request.number }} is ready for review and merge."
