name: Wait for Workflows
on:
  pull_request:
    branches-ignore:
      - main

jobs:
  wait-for-workflows:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pull-requests: write
      actions: read
      checks: read
    steps:

    - name: Initial delay
      run: |
        DELAY_TIME="${{ env.INITIAL_DELAY_SECONDS }}"
        echo "‚è±Ô∏è Waiting for ${DELAY_TIME} seconds to allow other workflows to start..."
        echo "This helps ensure all related workflows are detected before status checking begins."
        sleep ${DELAY_TIME}
        echo "‚úÖ Delay completed. Starting workflow status monitoring..."
      env:
        INITIAL_DELAY_SECONDS: 30

    - name: Get GitHub App Token
      id: app-token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        permission-actions: read
        permission-checks: read
        permission-pull-requests: write

    - name: Wait for all workflows to complete
      uses: lewagon/wait-on-check-action@v1.3.4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        running-workflow-name: 'wait-for-workflows'
        repo-token: ${{ steps.app-token.outputs.token }}
        allowed-conclusions: success,failure,skipped,cancelled
        wait-interval: 20
      continue-on-error: true

    - name: Get workflow status
      id: workflow-status
      uses: actions/github-script@v7
      with:
        github-token: ${{ steps.app-token.outputs.token }}
        script: |
          const commit_sha = '${{ github.event.pull_request.head.sha }}';

          const { data: workflowRuns } = await github.rest.actions.listWorkflowRunsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head_sha: commit_sha,
            per_page: 100
          });

          const relevantRuns = workflowRuns.workflow_runs.filter(
            run => run.name !== 'Wait for Workflows'
          );

          if (relevantRuns.length === 0) {
            core.setOutput('overall-status', 'no_workflows');
            core.setOutput('workflow-table', 'No workflows found for this commit.');
            return;
          }

          const failureCount = relevantRuns.filter(run => run.conclusion === 'failure').length;
          const inProgressCount = relevantRuns.filter(run =>
            run.status === 'in_progress' || run.status === 'queued'
          ).length;

          let overallStatus;
          if (inProgressCount > 0) {
            overallStatus = 'in_progress';
          } else if (failureCount > 0) {
            overallStatus = 'failure';
          } else {
            overallStatus = 'success';
          }

          // Generate workflow table
          let tableRows = ['| Workflow | Status | Result |', '|----------|---------|--------|'];

          relevantRuns.forEach(run => {
            const statusIcon = run.status === 'completed' ?
              (run.conclusion === 'success' ? '‚úÖ' :
               run.conclusion === 'failure' ? '‚ùå' :
               run.conclusion === 'cancelled' ? '‚èπÔ∏è' :
               run.conclusion === 'skipped' ? '‚è≠Ô∏è' : '‚ùì') :
              'üîÑ';

            const statusText = run.conclusion || run.status;
            const workflowLink = `[${run.name}](${run.html_url})`;
            tableRows.push(`| ${workflowLink} | ${statusIcon} | ${statusText} |`);
          });

          core.setOutput('overall-status', overallStatus);
          core.setOutput('workflow-table', tableRows.join('\n'));

    - name: Set status message
      id: status-message
      run: |
        case "${{ steps.workflow-status.outputs.overall-status }}" in
          "success")
            echo "message=### ‚úÖ All Workflows Passed!" >> $GITHUB_OUTPUT
            ;;
          "failure")
            echo "message=### ‚ùå Some Workflows Failed" >> $GITHUB_OUTPUT
            ;;
          "in_progress")
            echo "message=### ‚è≥ Workflows Still Running" >> $GITHUB_OUTPUT
            ;;
          "no_workflows")
            echo "message=### ‚ùì No Workflows Found" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "message=### ‚ùì Unknown Status" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Create or update PR comment
      uses: thollander/actions-comment-pull-request@v3
      with:
        message: |
          ## üîÑ Workflow Status Report

          **Commit:** `${{ github.event.pull_request.head.sha }}`

          ${{ steps.status-message.outputs.message }}

          ${{ steps.workflow-status.outputs.workflow-table }}
        comment-tag: workflow-status
        mode: upsert
        pr-number: ${{ github.event.pull_request.number }}
      continue-on-error: true

    - name: Notify Slack
      uses: slackapi/slack-github-action@v2
      with:
        method: chat.postMessage
        payload: |
          {
            "channel": "C0907M25935",
            "text": "Workflow completed for PR #123",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ steps.workflow-status.outputs.overall-status == 'success' && 'üéâ *All workflows passed*' || 'üö® *Workflows failed*' }} in PR #${{ github.event.pull_request.number }}"
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Author:*\n${{ github.event.pull_request.user.login }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Status:*\n${{ steps.workflow-status.outputs.overall-status }}"
                  }
                ]
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View PR"
                    },
                    "url": "${{ github.event.pull_request.html_url }}"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Fail if workflows failed
      if: steps.workflow-status.outputs.overall-status == 'failure'
      run: |
        echo "‚ùå Some workflows failed - failing this workflow as well"
        exit 1

    - name: Success actions
      if: steps.workflow-status.outputs.overall-status == 'success'
      run: |
        echo "‚úÖ All workflows passed successfully!"
        echo "PR #${{ github.event.pull_request.number }} is ready for review and merge."
