name: Reusable Terragrunt Plan (Single Environment)

on:
  workflow_call:
    inputs:
      project_name:
        description: 'Project name for the service'
        required: true
        type: string
      env_dir:
        description: 'Environment directory path'
        required: true
        type: string
      env_name:
        description: 'Environment name'
        required: true
        type: string
      service_dir:
        description: 'Service directory path'
        required: true
        type: string
      terraform_version:
        description: 'Terraform version'
        required: false
        type: string
        default: '1.5.7'
      terragrunt_version:
        description: 'Terragrunt version'
        required: false
        type: string
        default: '0.53.2'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan-single:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load IAM role configuration
        id: load-config
        run: |
          CONFIG_FILE=".github/terragrunt-actions-config.yaml"
          ENV_NAME="${{ inputs.env_name }}"

          echo "environment-name=$ENV_NAME" >> $GITHUB_OUTPUT

          # Determine Plan IAM role: env.iam_role_plan → default.iam_role_plan
          PLAN_IAM_ROLE=$(yq eval ".$ENV_NAME.iam_role_plan // .default.iam_role_plan" $CONFIG_FILE)
          AWS_REGION=$(yq eval ".$ENV_NAME.aws_region // .default.aws_region // \"us-east-1\"" $CONFIG_FILE)

          # Check for custom working directory
          WORKING_DIR=$(yq eval ".$ENV_NAME.working_directory" $CONFIG_FILE)
          if [ "$WORKING_DIR" != "null" ]; then
            FINAL_WORKING_DIR="$WORKING_DIR"
            echo "Using custom working directory from config: $WORKING_DIR"
          else
            FINAL_WORKING_DIR="${{ inputs.env_dir }}"
            echo "Using detected working directory: $FINAL_WORKING_DIR"
          fi

          # Check if we're using fallback
          SPECIFIC_PLAN_ROLE=$(yq eval ".$ENV_NAME.iam_role_plan" $CONFIG_FILE)
          if [ "$SPECIFIC_PLAN_ROLE" = "null" ]; then
            echo "Environment '$ENV_NAME' plan role not found, using default plan role"
          fi

          echo "plan-iam-role=$PLAN_IAM_ROLE" >> $GITHUB_OUTPUT
          echo "aws-region=$AWS_REGION" >> $GITHUB_OUTPUT
          echo "working-directory=$FINAL_WORKING_DIR" >> $GITHUB_OUTPUT
          echo "Using Plan IAM role: $PLAN_IAM_ROLE for environment: $ENV_NAME"

      - name: Configure AWS credentials for Plan
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.load-config.outputs.plan-iam-role }}
          role-session-name: terragrunt-plan-${{ inputs.project_name }}-${{ inputs.env_name }}
          aws-region: ${{ steps.load-config.outputs.aws-region }}

      - name: Plan terragrunt for environment
        id: plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ inputs.terraform_version }}
          tg_version: ${{ inputs.terragrunt_version }}
          tg_dir: ${{ steps.load-config.outputs.working-directory }}
          tg_command: 'plan --terragrunt-non-interactive'
        env:
          TF_INPUT: false
          AWS_DEFAULT_REGION: ${{ steps.load-config.outputs.aws-region }}
        continue-on-error: true

      - name: Parse plan output
        id: parse-plan
        run: |
          PLAN_OUTPUT="${{ steps.plan.outputs.stdout }}"

          # Count changes
          ADDITIONS=$(echo "$PLAN_OUTPUT" | grep -o "Plan: [0-9]* to add" | grep -o "[0-9]*" || echo "0")
          CHANGES=$(echo "$PLAN_OUTPUT" | grep -o "[0-9]* to change" | grep -o "[0-9]*" || echo "0")
          DELETIONS=$(echo "$PLAN_OUTPUT" | grep -o "[0-9]* to destroy" | grep -o "[0-9]*" || echo "0")

          PLAN_STATUS="${{ steps.plan.outcome }}"

          # Truncate output if too long
          TRUNCATED_OUTPUT=$(echo "$PLAN_OUTPUT" | head -c 30000)
          if [ ${#PLAN_OUTPUT} -gt 30000 ]; then
            TRUNCATED_OUTPUT="$TRUNCATED_OUTPUT\n\n... (output truncated, see workflow logs for full details)"
          fi

          # Escape special characters for GitHub
          ESCAPED_OUTPUT=$(echo "$TRUNCATED_OUTPUT" | sed 's/`/\\`/g' | sed 's/\$/\\$/g')

          echo "additions=$ADDITIONS" >> $GITHUB_OUTPUT
          echo "changes=$CHANGES" >> $GITHUB_OUTPUT
          echo "deletions=$DELETIONS" >> $GITHUB_OUTPUT
          echo "status=$PLAN_STATUS" >> $GITHUB_OUTPUT
          echo "output<<EOF" >> $GITHUB_OUTPUT
          echo "$ESCAPED_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Find existing comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'terragrunt-plan-${{ inputs.env_name }}-${{ inputs.project_name }}'

      - name: Create or update plan comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- terragrunt-plan-${{ inputs.env_name }}-${{ inputs.project_name }} -->
            ## 📋 Terragrunt Plan Results

            **Project**: ${{ inputs.project_name }}
            **Environment**: `${{ inputs.env_name }}`
            **Directory**: `${{ steps.load-config.outputs.working-directory }}`
            **IAM Role (Plan)**: ${{ steps.load-config.outputs.plan-iam-role }}
            **AWS Region**: ${{ steps.load-config.outputs.aws-region }}
            **Status**: ${{ steps.parse-plan.outputs.status == 'success' && '✅ Success' || '❌ Failed' }}

            ### 📊 Plan Summary

            | Action | Count |
            |--------|-------|
            | 🟢 Add | ${{ steps.parse-plan.outputs.additions }} |
            | 🟡 Change | ${{ steps.parse-plan.outputs.changes }} |
            | 🔴 Destroy | ${{ steps.parse-plan.outputs.deletions }} |

            <details>
            <summary>📝 Plan Output</summary>

            ```hcl
            ${{ steps.parse-plan.outputs.output }}
            ```

            </details>

            <details>
            <summary>📁 Environment Structure</summary>

            ```
            ${{ inputs.service_dir }}/terragrunt/
            ├── root.hcl
            ├── Makefile
            ├── modules/
            └── envs/
                └── ${{ inputs.env_name }}/    ← This environment
            ```
            </details>

            Please review the plan output above before merging. View full logs: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            *Last updated: ${{ steps.load-config.outputs.environment-name }} at ${{ github.event.pull_request.updated_at }}*
          edit-mode: replace
