# .github/workflows/claude-issue-implementation.yml
name: 'Claude Issue Implementation'

on:
  issue_comment:
    types: [created]
  issues:
    types: [labeled]

env:
  # 実行時間短縮のため、Claude設定は固定値を使用
  # Terragrunt outputから取得する代わりにGitHub Secretsで管理

jobs:
  check-trigger:
    name: 'Check Trigger Conditions'
    runs-on: ubuntu-latest
    outputs:
      should_implement: ${{ steps.check.outputs.should_implement }}
      trigger_type: ${{ steps.check.outputs.trigger_type }}
      implementation_prompt: ${{ steps.check.outputs.implementation_prompt }}
    steps:
    - name: Check trigger conditions
      id: check
      run: |
        SHOULD_IMPLEMENT="false"
        TRIGGER_TYPE=""
        IMPLEMENTATION_PROMPT=""

        # Check for comment trigger
        if [ "${{ github.event_name }}" = "issue_comment" ]; then
          if [ "${{ github.event.issue.state }}" = "open" ]; then
            COMMENT_BODY="${{ github.event.comment.body }}"
            if echo "$COMMENT_BODY" | grep -E "(^|\s)@claude\s+implement|^/claude\s+implement"; then
              SHOULD_IMPLEMENT="true"
              TRIGGER_TYPE="comment"
              # Extract custom prompt if provided
              IMPLEMENTATION_PROMPT=$(echo "$COMMENT_BODY" | sed -n 's/.*@claude implement[[:space:]]*\(.*\)/\1/p' | head -1)
            fi
          fi
        fi

        # Check for label trigger
        if [ "${{ github.event_name }}" = "issues" ]; then
          if [ "${{ github.event.label.name }}" = "claude-implement" ]; then
            SHOULD_IMPLEMENT="true"
            TRIGGER_TYPE="label"
          fi
        fi

        echo "should_implement=$SHOULD_IMPLEMENT" >> $GITHUB_OUTPUT
        echo "trigger_type=$TRIGGER_TYPE" >> $GITHUB_OUTPUT
        echo "implementation_prompt=$IMPLEMENTATION_PROMPT" >> $GITHUB_OUTPUT

        echo "Should implement: $SHOULD_IMPLEMENT"
        echo "Trigger type: $TRIGGER_TYPE"
        echo "Custom prompt: $IMPLEMENTATION_PROMPT"

  implement-issue:
    name: 'Implement Issue with Claude'
    needs: check-trigger
    if: needs.check-trigger.outputs.should_implement == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.CLAUDE_IAM_ROLE_ARN }}
        aws-region: ${{ secrets.CLAUDE_AWS_REGION }}

    - name: Add initial reaction
      uses: actions/github-script@v7
      if: needs.check-trigger.outputs.trigger_type == 'comment'
      with:
        github-token: ${{ github.token }}
        script: |
          await github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: ${{ github.event.comment.id }},
            content: 'eyes'
          });

    - name: Add implementation status comment
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          await github.rest.issues.createComment({
            issue_number: ${{ github.event.issue.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🤖 **Claude Implementation Started**

            I'm analyzing this issue and will create an implementation. This may take a few minutes...

            **Issue**: ${{ github.event.issue.title }}
            **Triggered by**: ${{ needs.check-trigger.outputs.trigger_type }}
            **Workflow**: [View Progress](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `
          });

    - name: Prepare implementation prompt
      id: prompt
      run: |
        ISSUE_TITLE="${{ github.event.issue.title }}"
        ISSUE_BODY="${{ github.event.issue.body }}"
        CUSTOM_PROMPT="${{ needs.check-trigger.outputs.implementation_prompt }}"
        REPO_NAME="${{ github.repository }}"

        # Create comprehensive prompt
        cat > implementation_prompt.txt << 'EOF'
        You are an expert software engineer working on the GitHub repository: $REPO_NAME

        **Task**: Implement the following GitHub issue:

        **Issue Title**: $ISSUE_TITLE

        **Issue Description**:
        $ISSUE_BODY

        **Additional Instructions**: $CUSTOM_PROMPT

        **Requirements**:
        1. Analyze the codebase structure and understand the existing patterns
        2. Implement the feature/fix according to the issue description
        3. Follow the existing code style and conventions
        4. Add appropriate tests if applicable
        5. Update documentation if needed
        6. Create a meaningful commit message

        **Output Format**:
        - Provide a clear explanation of your implementation approach
        - List all files that need to be created or modified
        - Provide the complete code for each file
        - Suggest any additional considerations or follow-up tasks

        Please implement this issue comprehensively and professionally.
        EOF

        # Replace variables in the prompt
        sed -i "s/\$REPO_NAME/$REPO_NAME/g" implementation_prompt.txt
        sed -i "s/\$ISSUE_TITLE/$ISSUE_TITLE/g" implementation_prompt.txt
        sed -i "s/\$ISSUE_BODY/$ISSUE_BODY/g" implementation_prompt.txt
        sed -i "s/\$CUSTOM_PROMPT/$CUSTOM_PROMPT/g" implementation_prompt.txt

        echo "Prompt prepared successfully"

    - name: Implement with Claude Code
      id: claude
      uses: anthropics/claude-code-action@v1
      with:
        provider: 'bedrock'
        region: ${{ secrets.CLAUDE_AWS_REGION }}
        role_arn: ${{ secrets.CLAUDE_IAM_ROLE_ARN }}
        model: 'anthropic.claude-3-sonnet-20240229-v1:0'
        prompt_file: 'implementation_prompt.txt'
        auto_commit: false
        branch_prefix: 'claude-implement'

    - name: Create Pull Request
      if: steps.claude.outputs.changes_made == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          const branchName = '${{ steps.claude.outputs.branch_name }}';
          const issueNumber = ${{ github.event.issue.number }};

          const { data: pr } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🤖 Implement: ${{ github.event.issue.title }}`,
            head: branchName,
            base: 'main',
            body: `## 🤖 Claude Implementation

            This PR was automatically generated by Claude to implement issue #${issueNumber}.

            **Original Issue**: #${issueNumber}
            **Implemented by**: Claude Code Action
            **Triggered by**: ${{ github.actor }} (${{ needs.check-trigger.outputs.trigger_type }})

            ## Changes Made
            ${{ steps.claude.outputs.summary }}

            ## Review Notes
            Please review the implementation carefully and test thoroughly before merging.

            ---
            Closes #${issueNumber}
            `
          });

          // Link PR to issue
          await github.rest.issues.createComment({
            issue_number: issueNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🎉 **Implementation Complete!**

            I've created a pull request with the implementation: #${pr.number}

            **Summary**: ${{ steps.claude.outputs.summary }}

            Please review the changes and merge when ready.`
          });

          // Add success reaction
          if (${{ needs.check-trigger.outputs.trigger_type == 'comment' }}) {
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              content: 'rocket'
            });
          }

    - name: Handle implementation failure
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          await github.rest.issues.createComment({
            issue_number: ${{ github.event.issue.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `❌ **Implementation Failed**

            I encountered an error while trying to implement this issue.

            **Error Details**: Check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more information.

            Please check the issue description and try again, or implement manually.`
          });

          // Add failure reaction to trigger comment
          if (${{ needs.check-trigger.outputs.trigger_type == 'comment' }}) {
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ github.event.comment.id }},
              content: 'confused'
            });
          }
